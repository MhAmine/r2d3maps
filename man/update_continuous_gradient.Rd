% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/d3_map_proxy.R
\name{update_continuous_gradient}
\alias{update_continuous_gradient}
\title{Update a gradient scale in Shiny}
\usage{
update_continuous_gradient(proxy, var, low = NULL, high = NULL,
  range = NULL)
}
\arguments{
\item{proxy}{A \code{d3_map_proxy} object.}

\item{var}{New var to use on the map.}

\item{low, high}{Colours for low and high ends of the gradient.}

\item{range}{A length two vector to force range of data.}
}
\description{
Update a gradient scale in Shiny
}
\examples{
\dontrun{

if (interactive()) {

library(r2d3maps)
library(shiny)

# data about Paris
data("paris")


# app
ui <- fluidPage(
  fluidRow(
    column(
      width = 8, offset = 2,
      tags$h2("Proxy for continuous breaks scale"),
      d3Output(outputId = "mymap"),
      selectInput(
        inputId = "var", label = "Variable:",
        choices = grep(pattern = "AGE", x = names(paris), value = TRUE)
      )
    )
  )
)

server <- function(input, output, session) {

  output$mymap <- renderD3({
    d3_map(shape = paris) \%>\%
      add_continuous_gradient(var = "AGE_00", low = "#FEE0D2", high = "#CB181D") \%>\%
      add_legend(d3_format = ".2s")
  })

  observeEvent(input$var, {
    d3_map_proxy(shinyId = "mymap", data = paris) \%>\%
      update_continuous_gradient(var = input$var)
  }, ignoreInit = TRUE)

}

shinyApp(ui, server)

}

}
}
